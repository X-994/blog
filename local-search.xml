<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>代码随想录一刷</title>
    <link href="/2024/09/16/DaiMaSuiXiang-1/"/>
    <url>/2024/09/16/DaiMaSuiXiang-1/</url>
    
    <content type="html"><![CDATA[<h2 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h2><h3 id="704-二分查找"><a href="#704-二分查找" class="headerlink" title="704.二分查找"></a>704.二分查找</h3><p><img src="/../img/DaiMaSuiXiang_1/704.png"><br>第一种（左闭右闭）</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int search(int* nums, int numsSize, int target) &#123;<br>    int left = 0;<br>    int right = numsSize - 1;<br>    int middle;<br>    while(left &lt;= right)&#123;<br>         middle = (left + right) / 2;<br>        if(target &lt; nums[middle])<br>            right = middle - 1;<br>        else if(target &gt;nums[middle] )<br>            left =  middle + 1;<br>        else<br>            return middle;<br>    &#125;<br>    return -1;<br>&#125;<br></code></pre></td></tr></table></figure><p>第二种（左闭右开）</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int search(int* nums, int numsSize, int target) &#123;<br>    int left = 0;<br>    int right = numsSize;<br>    int middle;<br>    while(left &lt; right)&#123;<br>         middle = (left + right) / 2;<br>        if(target &lt; nums[middle])<br>            right = middle;<br>        else if(target &gt;nums[middle] )<br>            left =  middle + 1;<br>        else<br>            return middle;<br>    &#125;<br>    return -1;<br></code></pre></td></tr></table></figure><p><strong>总结</strong><br>二分法就是化一为二，将问题细分，当是一个有序的数组才可以使用，区间的选择决定了while的条件和right的值</p><h3 id="34-在排序数组中查找元素的第一个和最后一个位置"><a href="#34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="34. 在排序数组中查找元素的第一个和最后一个位置"></a>34. 在排序数组中查找元素的第一个和最后一个位置</h3><p><img src="/../img/DaiMaSuiXiang_1/34.png"><br>思路：通过两个二分法分别找出左右两个边界。<br>错误和分析：我将数组从中间分成两半，然后这个中间值作为左右两个边界了，应该是先用二分法找出第一个出现的目标值，然后再根据找哪个边界值然后才进行下一个二分法。虽然我的想法是这个的，但是我的代码还是先是将中间值作为了边界值<br>新知识：&gt;&gt;1右移运算符，将二进制位数向右移动一位，相当于整数除法除以2<br>middle &#x3D; left+((right - letf) &gt;&gt; 1)  等于 middle&#x3D;（left+right)&#x2F;2</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int searchLeftBorder(int *nums, int numsSize, int target) &#123;<br>    int left = 0, right = numsSize - 1;<br>    // 记录leftBorder没有被赋值的情况<br>    int leftBorder = -1;<br>    // 边界为[left, right]<br>    while (left &lt;= right) &#123;<br>        // 更新middle值，等同于middle = (left + right) / 2<br>        int middle = left + ((right - left) &gt;&gt; 1);<br>        // 若当前middle所指为target，将左边界设为middle，并向左继续寻找左边界<br>        if (nums[middle] == target) &#123;<br>            leftBorder = middle;<br>            right = middle - 1;<br>        &#125; else if (nums[middle] &gt; target) &#123;<br>            right = middle - 1;<br>        &#125; else &#123;<br>            left = middle + 1;<br>        &#125;<br>    &#125;<br>    return leftBorder;<br>&#125;<br>int searchRightBorder(int *nums, int numsSize, int target) &#123;<br>    int left = 0, right = numsSize - 1;<br>    // 记录rightBorder没有被赋值的情况<br>    int rightBorder = -1;<br>    while (left &lt;= right) &#123;<br>        int middle = left + ((right - left) &gt;&gt; 1);<br>        // 若当前middle所指为target，将右边界设为middle，并向右继续寻找右边界<br>        if (nums[middle] == target) &#123;<br>            rightBorder = middle;<br>            left = middle + 1;<br>        &#125; else if (nums[middle] &gt; target) &#123;<br>            right = middle - 1;<br>        &#125; else &#123;<br>            left = middle + 1;<br>        &#125;<br>    &#125;<br>    return rightBorder;<br>&#125;<br> <br>int* searchRange(int* nums, int numsSize, int target, int* returnSize)&#123;<br>    int leftBorder = searchLeftBorder(nums, numsSize, target);<br>    int rightBorder = searchRightBorder(nums, numsSize, target);<br> <br>    // 定义返回数组及数组大小<br>    *returnSize = 2;<br>    int *resNums = (int*)malloc(sizeof(int) * 2);<br>    resNums[0] = leftBorder;<br>    resNums[1] = rightBorder;<br>    return resNums;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="35搜索插入位置"><a href="#35搜索插入位置" class="headerlink" title="35搜索插入位置"></a>35搜索插入位置</h3><p><img src="/../img/DaiMaSuiXiang_1/35.png"><br>左闭右闭</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int searchInsert(int* nums, int numsSize, int target) &#123;<br>    int left = 0;<br>    int right = numsSize - 1;<br>    int  middle;<br>    while(left &lt;= right)&#123;<br>        middle = (left + right)/2;<br>        if(nums[middle] &lt; target )<br>            left = middle + 1;<br>        else if(nums[middle] &gt; target)<br>            right = middle - 1;<br>        else <br>            return middle;<br>    &#125;<br>    return right + 1;<br>    &#125;<br></code></pre></td></tr></table></figure><p>左闭右开</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int searchInsert(int* nums, int numsSize, int target) &#123;<br>    int left = 0;<br>    int right = numsSize;<br>    int  middle;<br>    while(left &lt; right)&#123;<br>        middle = (left + right)/2;<br>        if(nums[middle] &lt; target )<br>            left = middle + 1;<br>        else if(nums[middle] &gt; target)<br>            right = middle;<br>        else <br>            return middle;<br>    &#125;<br>    return right;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27.移除元素"></a>27.移除元素</h3><p><img src="/../img/DaiMaSuiXiang_1/27.png"><br>暴力解法</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int removeElement(int* nums, int numsSize, int val) &#123;<br>    for(int i = 0;i &lt; numsSize; i++)&#123;<br>        if(nums[i] == val)<br>        &#123;<br>            for(int j = i + 1; j &lt; numsSize; j++ )<br>                nums[j - 1] = nums[j];<br>            i--;<br>            numsSize--; <br>        &#125;<br>    &#125;<br>    return numsSize;<br>&#125;<br></code></pre></td></tr></table></figure><p>双指针</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int removeElement(int* nums, int numsSize, int val) &#123;<br>    int slow = 0; <br>    for(int fast = 0; fast &lt; numsSize; fast++)&#123;<br>        if(nums[fast] != val)<br>            nums[slow++] = nums[fast];<br>    &#125;<br>    return slow;<br>&#125;<br></code></pre></td></tr></table></figure><p>总结<br>数组理论知识：数组在内存上是连续的，不可以通过删除移除元素，只可以通过覆盖元素<br>双指针：慢指针是指向数组位置，快指针是指向数值，将原来的数组当作空白的数组，只要不是删除值，那么就将它复制数组中</p><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><h3 id="977-有序数组的平方"><a href="#977-有序数组的平方" class="headerlink" title="977.有序数组的平方"></a>977.有序数组的平方</h3><p><img src="/../img/DaiMaSuiXiang_1/997.png"><br>暴力解法（插入排序）</p><figure class="highlight plaintext"><figcaption><span>[c]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bush">void square(int* nums, int numsSize)&#123;<br>    for(int i = 0; i &lt; numsSize; i++)<br>        nums[i]*=nums[i];<br>&#125;<br>void insertSort(int* nums, int numsSize)&#123;<br>    int i;<br>    int p;<br>    int temp;<br>    for(i = 1; i &lt; numsSize; i++)&#123;<br>        temp = nums[i];<br>        for(p = i;p &gt; 0 &amp;&amp; nums[p-1] &gt; temp; p--)<br>            nums[p] = nums[p-1];<br>        nums[p] = temp;<br>    <br>    &#125;<br>&#125;<br>int* sortedSquares(int* nums, int numsSize, int* returnSize) &#123;<br>    square(nums, numsSize);<br>    insertSort(nums, numsSize);<br>    *returnSize = numsSize;<br>    int* ans=(int*)malloc(sizeof(int)*numsSize);<br>    for(int i = 0; i &lt; numsSize; i++)<br>        ans[i] = nums[i];<br>    return ans;<br> <br>&#125;<br></code></pre></td></tr></table></figure><p>双指针</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs [c]">/**<br> * Note: The returned array must be malloced, assume caller calls free().<br> */<br>int* sortedSquares(int* nums, int numsSize, int* returnSize) &#123;<br>    *returnSize = numsSize;<br>    int left = 0;<br>    int right = numsSize - 1;<br>    int*ans = (int*)malloc(sizeof(int)*numsSize);<br>    int index;<br>    for( index = numsSize-1; index &gt;= 0; index--)&#123;<br>        int lsquare = nums[left]*nums[left];<br>        int rsquare =  nums[right]*nums[right];<br>        if(lsquare &gt; rsquare)<br>        &#123;<br>            ans[index] = lsquare;<br>            left++;<br>        &#125;<br>        else<br>        &#123;<br>            ans[index] = rsquare;<br>            right--;<br>        &#125;<br>        <br>    &#125;<br>    return ans;<br>&#125;<br></code></pre></td></tr></table></figure><p>总结：如何使用双指针是看题目的需求，这道题用双指针的思路和归并排序的思路相类似。</p><h3 id="209-长度最小数组"><a href="#209-长度最小数组" class="headerlink" title="209.长度最小数组"></a>209.长度最小数组</h3><p><img src="/../img/DaiMaSuiXiang_1/209.png"></p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int minSubArrayLen(int target, int* nums, int numsSize) &#123;<br>    int minlength =  INT_MAX;<br>    int sum = 0;<br>    int left = 0;<br>    int right = 0;<br>    for(; right &lt; numsSize; right++)&#123;<br>        sum+=nums[right];<br>        while(sum &gt;= target)<br>        &#123;<br>            int SubLength = right - left + 1;<br>            minlength=minlength &lt; SubLength ? minlength: SubLength;<br>            sum-= nums[left++];<br>        &#125;<br>    &#125;<br>    return minlength == INT_MAX ? 0 : minlength;<br>&#125;<br></code></pre></td></tr></table></figure><p>我的错误：想将所有的长度放在一个数组里，然后再进行比较，而且没有完全将所有的可能考虑到。对c语言还不是很熟练<br>总结：滑动窗口中，要考虑滑动窗口是如何移动的。看到最大值，可以使用动态变化，可以使用三元表示法，最值初始化时，可以使用头文件带的最值。</p><h3 id="59-螺旋矩阵II"><a href="#59-螺旋矩阵II" class="headerlink" title="59.螺旋矩阵II"></a>59.螺旋矩阵II</h3><p><img src="/../img/DaiMaSuiXiang_1/59.png"></p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int** generateMatrix(int n, int* returnSize, int** returnColumnSizes)&#123;<br>    //初始化返回的结果数组的大小<br>    *returnSize = n;<br>    *returnColumnSizes = (int*)malloc(sizeof(int) * n);<br>    //初始化返回结果数组ans<br>    int** ans = (int**)malloc(sizeof(int*) * n);<br>    int i;<br>    for(i = 0; i &lt; n; i++) &#123;<br>        ans[i] = (int*)malloc(sizeof(int) * n);<br>        (*returnColumnSizes)[i] = n;<br>    &#125;<br> <br>    //设置每次循环的起始位置<br>    int startX = 0;<br>    int startY = 0;<br>    //设置二维数组的中间值，若n为奇数。需要最后在中间填入数字<br>    int mid = n / 2;<br>    //循环圈数<br>    int loop = n / 2;<br>    //偏移数<br>    int offset = 1;<br>    //当前要添加的元素<br>    int count = 1;<br> <br>    while(loop) &#123;<br>        int i = startX;<br>        int j = startY;<br>        //模拟上侧从左到右<br>        for(; j &lt;   n - offset; j++) &#123;<br>            ans[startX][j] = count++;<br>        &#125;<br>        //模拟右侧从上到下<br>        for(; i &lt;  n - offset; i++) &#123;<br>            ans[i][j] = count++;<br>        &#125;<br>        //模拟下侧从右到左<br>        for(; j &gt; startY; j--) &#123;<br>            ans[i][j] = count++;<br>        &#125;<br>        //模拟左侧从下到上<br>        for(; i &gt; startX; i--) &#123;<br>            ans[i][j] = count++;<br>        &#125;<br>        //偏移值每次加2<br>        offset+=1;<br>        //遍历起始位置每次+1<br>        startX++;<br>        startY++;<br>        loop--;<br>    &#125;<br>    //若n为奇数需要单独给矩阵中间赋值<br>    if(n%2)<br>        ans[mid][mid] = count;<br> <br>    return ans;<br>&#125;<br></code></pre></td></tr></table></figure><p>总结：螺旋矩阵最重要的就是区间的选择。</p><h2 id="数组总结"><a href="#数组总结" class="headerlink" title="数组总结"></a>数组总结</h2><p>理论<br>数组的内存是连续的，想要得到连续的数组，就不可以直接删除其中的元素<br>二维数组的初始化</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs [c]">int** ans = (int**)malloc(sizeof(int*) * n);<br>    int i;<br>    for(i = 0; i &lt; n; i++) &#123;<br>    ans[i] = (int*)malloc(sizeof(int) * n);<br></code></pre></td></tr></table></figure><p>解题方法：<br>二分法：根据是否满足题目的条件来缩小答案所在的区间，这个就是二分的本质。<br>做好区间的选择<br>双指针：要根据题目的条件来确定快慢指针的位置，循环的条件</p><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><h3 id="203-移除链表元素"><a href="#203-移除链表元素" class="headerlink" title="203.移除链表元素"></a>203.移除链表元素</h3><p>！<a href="../img/DaiMaSuiXiang_1/203"></a><br>有哑结点</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs [c]">struct ListNode* removeElements(struct ListNode* head, int val) &#123;<br>    typedef struct ListNode ListNode;<br>    ListNode *shead;<br>    shead = (ListNode*)malloc(sizeof(ListNode));<br>    shead-&gt;next = head;<br>    ListNode *cur = shead;<br>    while(cur-&gt;next != NULL)<br>&#123;<br>        if(cur-&gt;next-&gt;val == val)<br>            &#123;<br>                ListNode *temp = cur-&gt;next;<br>                cur-&gt;next = cur-&gt;next-&gt;next;<br>                free(temp);<br>&#125;<br>           else<br>&#123;<br>                cur = cur-&gt;next;<br>&#125;<br><br>    &#125;<br>    head = shead-&gt;next;<br>    return head;<br>&#125;<br></code></pre></td></tr></table></figure><p>无哑结点</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs [c]">struct ListNode* removeElements(struct ListNode* head, int val) &#123;<br>    struct ListNode* temp;<br>    while(head &amp;&amp; head-&gt;val == val)<br>&#123;<br>        temp = head;<br>        head = head-&gt;next;<br>        free(temp);<br>&#125;<br>       struct ListNode* cur = head;<br>    while(cur &amp;&amp; (temp = cur-&gt;next))<br>&#123;<br>    if(temp -&gt;val == val)<br>&#123;<br>        cur-&gt;next = temp-&gt;next;<br>        free(temp);<br>&#125;<br>    else<br>    cur = cur-&gt;next;<br><br>    &#125;<br>    return head;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>总结：有无哑结点的，就是对头节点如何操作的问题。</p><h3 id="707-设计链表"><a href="#707-设计链表" class="headerlink" title="707.设计链表"></a>707.设计链表</h3><p><img src="/../img/DaiMaSuiXiang_1/707"></p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs [c]">typedef struct &#123;<br>    int val;<br>    struct MyLinkedList* next;<br>&#125; MyLinkedList;<br><br>MyLinkedList* myLinkedListCreate() &#123;<br>    MyLinkedList* head = (MyLinkedList *)malloc(sizeof (MyLinkedList));<br>    head-&gt;next = NULL;<br>    return head;<br>&#125;<br><br>int myLinkedListGet(MyLinkedList* obj, int index) &#123;<br>    MyLinkedList *cur = obj-&gt;next;<br>    for (int i = 0; cur != NULL; i++)&#123;<br>        if (i == index)&#123;<br>            return cur-&gt;val;<br>&#125;<br>            else&#123;<br>                cur = cur-&gt;next;<br>&#125;<br>&#125;<br>        return -1;<br>&#125;<br><br>void myLinkedListAddAtHead(MyLinkedList* obj, int val) &#123;<br>    MyLinkedList* nhead = (MyLinkedList*)malloc(sizeof(MyLinkedList));<br>        nhead-&gt;val = val;<br>    nhead-&gt;next = obj-&gt;next;<br>    obj-&gt;next = nhead;<br>&#125;<br>void myLinkedListAddAtTail(MyLinkedList* obj, int val) &#123;<br>    MyLinkedList *cur = obj;<br>    while(cur-&gt;next != NULL)&#123;<br>    cur = cur-&gt;next;<br>&#125;<br>MyLinkedList *ntail = (MyLinkedList *)malloc(sizeof (MyLinkedList));<br>    ntail-&gt;val = val;<br>    ntail-&gt;next = NULL;<br>    cur-&gt;next = ntail;<br>&#125;<br><br>void myLinkedListAddAtIndex(MyLinkedList* obj, int index, int val) &#123;<br>if (index == 0)&#123;<br>myLinkedListAddAtHead(obj, val);<br>return;<br>&#125;<br>MyLinkedList *cur = obj-&gt;next;<br>for(int count = 1; cur != NULL;count++)&#123;<br>    if(count == index)<br>&#123;<br>        MyLinkedList* new =(MyLinkedList*)malloc(sizeof(MyLinkedList));<br>        new-&gt;val = val;<br>        new-&gt;next = cur-&gt;next;<br>        cur-&gt;next = new;<br>        return;<br>&#125;<br>        else<br>            cur = cur-&gt;next;<br>    &#125;<br>&#125;<br><br>void myLinkedListDeleteAtIndex(MyLinkedList* obj, int index) &#123;<br>    if (index == 0)&#123;<br>        MyLinkedList *tmp = obj-&gt;next;<br>    <br>    if (tmp != NULL)&#123;<br>        obj-&gt;next = tmp-&gt;next;<br>        free(tmp);<br>    &#125;<br>    return;<br>&#125;<br>MyLinkedList *cur = obj-&gt;next;<br>    for (int i = 1 ;cur != NULL &amp;&amp; cur-&gt;next != NULL; i++)&#123;<br>        if (i == index)&#123;<br>            MyLinkedList *tmp = cur-&gt;next;<br>        if (tmp != NULL) &#123;<br>            cur-&gt;next = tmp-&gt;next;<br>        free(tmp);<br>&#125;<br>        return;<br>&#125;<br>e       lse&#123;<br>        cur = cur-&gt;next;<br>&#125;<br>&#125;<br><br>&#125;<br><br>void myLinkedListFree(MyLinkedList* obj) &#123;<br><br>    while(obj != NULL)<br>    &#123;<br>        MyLinkedList *tmp = obj;<br>        obj = obj-&gt;next;<br>        free(tmp);<br> <br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="206反转链表"><a href="#206反转链表" class="headerlink" title="206反转链表"></a>206反转链表</h3><p><img src="/../img/DaiMaSuiXiang_1/206"><br>双指针</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">struct ListNode* reverseList(struct ListNode* head) &#123;<br>    struct ListNode* cur = head;<br>    struct ListNode* pre = NULL;<br>    while(cur)&#123;<br>    struct ListNode* temp;<br>    temp = cur-&gt;next;<br>    cur-&gt;next = pre;<br>    pre = cur;<br>    cur = temp;<br>&#125;<br>    return pre;<br>&#125;<br></code></pre></td></tr></table></figure><p>递归</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">struct ListNode*reverse(struct ListNode* cur,struct ListNode* pre )&#123;<br><br>    if(!cur)<br>        return pre;<br>    struct ListNode* temp = cur-&gt;next;<br>    cur-&gt;next = pre;<br>    return reverse(temp,cur);<br><br>&#125;<br>    struct ListNode* reverseList(struct ListNode* head) &#123;<br>    return reverse(head,NULL);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="day04"><a href="#day04" class="headerlink" title="day04"></a>day04</h2><h2 id="24-两两交换链表中的节点"><a href="#24-两两交换链表中的节点" class="headerlink" title="24. 两两交换链表中的节点"></a>24. 两两交换链表中的节点</h2><p><img src="/../img/DaiMaSuiXiang_1/24.png"></p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs [c]">struct ListNode* swapPairs(struct ListNode* head) &#123;<br>    typedef struct ListNode ListNode;<br>    ListNode *fakehead = (ListNode*)malloc(sizeof(ListNode));<br>    fakehead-&gt;next = head;<br>    ListNode* left = fakehead;<br>    ListNode* right = fakehead-&gt;next;<br>    while(left &amp;&amp; right &amp;&amp; right-&gt;next)<br>    &#123;<br>        left-&gt;next = right-&gt;next;<br>        right-&gt;next = left-&gt;next-&gt;next;<br>        left-&gt;next-&gt;next = right; <br>        left = right;<br>        right = left-&gt;next; <br>    &#125;<br>    return fakehead-&gt;next;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="19-删除链表的倒数第N个节点"><a href="#19-删除链表的倒数第N个节点" class="headerlink" title="19.删除链表的倒数第N个节点"></a>19.删除链表的倒数第N个节点</h3><p><img src="/../img/DaiMaSuiXiang_1/19.png"></p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs [c]">/**<br> * Definition for singly-linked list.<br> * struct ListNode &#123;<br> *     int val;<br> *     struct ListNode *next;<br> * &#125;;<br> */<br>struct ListNode* removeNthFromEnd(struct ListNode* head, int n) &#123;<br>    typedef  struct ListNode ListNode;<br>    ListNode* fakehead=(ListNode*)malloc(sizeof(ListNode));<br>    fakehead-&gt;next = head;<br>    ListNode* fast = fakehead;<br>    ListNode* slow = fakehead;<br>    int count = 0;<br>    for(;count &lt; n+1; count++)&#123;<br>        fast = fast-&gt;next;<br>    &#125;<br>    while(fast)&#123;<br>        fast = fast-&gt;next;<br>        slow = slow-&gt;next;<br>    &#125;<br>    ListNode* temp;<br>    temp = slow-&gt;next;<br>    slow -&gt;next = slow-&gt;next-&gt;next;<br>    free(temp);<br>    return fakehead-&gt;next;<br> <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="面试题-02-07-链表相交"><a href="#面试题-02-07-链表相交" class="headerlink" title="面试题 02.07. 链表相交"></a>面试题 02.07. 链表相交</h3><p><img src="/../img/DaiMaSuiXiang_1/02.07.png"></p><p>思考：</p><p>为什么要对齐链表长度后才进行比较,相差的那一段为什么不会有相同的</p><p>——因为他们有一段共同的长度，所以说，他们相差的那一段中不可能有相同的元素。</p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs [c]">ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) &#123;<br>    ListNode *l = NULL, *s = NULL;<br>    int lenA = 0, lenB = 0, gap = 0;<br>    // 求出两个链表的长度<br>    s = headA;<br>    while (s) &#123;<br>        lenA ++;<br>        s = s-&gt;next;<br>    &#125;<br>    s = headB;<br>    while (s) &#123;<br>        lenB ++;<br>        s = s-&gt;next;<br>    &#125;<br><br>    // 求出两个链表长度差<br>    if (lenA &gt; lenB) &#123;<br>        l = headA, s = headB;<br>        gap = lenA - lenB;<br>    &#125; else &#123;<br>        l = headB, s = headA;<br>        gap = lenB - lenA;<br>    &#125;<br><br>    // 尾部对齐<br>    while (gap--) l = l-&gt;next;<br>    // 移动，并检查是否有相同的元素<br>    while (l) &#123;<br>        if (l == s) return l;<br>        l = l-&gt;next, s = s-&gt;next;<br>    &#125;<br><br>    return NULL;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="142-环形链表II"><a href="#142-环形链表II" class="headerlink" title="142.环形链表II"></a>142.环形链表II</h3><p><img src="/../img/DaiMaSuiXiang_1/142.png"></p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs [c]">ListNode *detectCycle(ListNode *head) &#123;<br>    ListNode *fast = head, *slow = head;<br>    while (fast &amp;&amp; fast-&gt;next) &#123;<br>        // 这里判断两个指针是否相等，所以移位操作放在前面<br>        slow = slow-&gt;next;<br>        fast = fast-&gt;next-&gt;next;<br>        if (slow == fast) &#123; // 相交，开始找环形入口：分别从头部和从交点出发，找到相遇的点就是环形入口<br>            ListNode *f = fast, *h = head;<br>            while (f != h) f = f-&gt;next, h = h-&gt;next;<br>            return h;<br>        &#125;<br>    &#125;<br>    return NULL;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>c</category>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>明解C语言课后练习</title>
    <link href="/2024/09/15/MingJieC-exerices/"/>
    <url>/2024/09/15/MingJieC-exerices/</url>
    
    <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>printf(&quot;15减去37的结果是%d&quot;,15-37);he<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-2"><a href="#1-2" class="headerlink" title="1.2"></a>1.2</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>printf(&quot;15减去37的结果是%d&quot;,15-37);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-3"><a href="#1-3" class="headerlink" title="1.3"></a>1.3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>printf(&quot;喂\n&quot;);<br>printf(&quot;      \n&quot;);<br>printf(&quot;您好\n&quot;);<br>printf(&quot;再见。\n&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-4"><a href="#1-4" class="headerlink" title="1.4"></a>1.4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main() &#123;<br>    int a = 3.14;<br>    printf(&quot;输出a的值：%d&quot;, a);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>int是整数型的 小数点后面的会被忽略 只保留整数部分 </p><h3 id="1-5"><a href="#1-5" class="headerlink" title="1.5"></a>1.5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main ()&#123;<br>    int a;<br>    printf(&quot;请输入一个整数：&quot;,a);<br>    scanf(&quot;%d&quot;,&amp;a);<br>    printf(&quot;该整数加去12的结果是:%d&quot;,a+6);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-6"><a href="#1-6" class="headerlink" title="1.6"></a>1.6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main ()&#123;<br>    int a;<br>    printf(&quot;请输入一个整数：&quot;,a);<br>    scanf(&quot;%d&quot;,&amp;a);<br>    printf(&quot;该整数减去6的结果是:%d&quot;,a-6);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-7"><a href="#1-7" class="headerlink" title="1.7"></a>1.7</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>    puts(&quot;天&quot;);<br>    puts(&quot;地&quot;);<br>    puts(&quot;人&quot;);<br>    return  0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-8"><a href="#1-8" class="headerlink" title="1.8"></a>1.8</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br>int c;<br>puts(&quot;请输入两个整数：&quot;);<br>printf(&quot;整数1:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数2:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>c=a*b;<br>printf(&quot;他们的乘积是：%d&quot;,c);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-9"><a href="#1-9" class="headerlink" title="1.9"></a>1.9</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b,c;<br>int d;<br>puts(&quot;请输入两个整数：&quot;);<br>printf(&quot;整数1:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数2:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;整数3:&quot;);    scanf(&quot;%d&quot;,&amp;c);<br>d=a+b+c;<br>printf(&quot;他们的和是：%d&quot;,d);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br><br>puts(&quot;请输入两个整数：&quot;);<br>printf(&quot;整数1:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数2:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;a的值是b的值的%d%%&quot;,(a*100)/b);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br>puts(&quot;请输入两个整数：&quot;);<br>printf(&quot;整数1:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数2:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;他们的和是%d,积是%d&quot;,a+b,a*b);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>    double a;<br>   <br>printf(&quot;请输入一个实数：&quot;);    scanf(&quot;%lf&quot;,&amp;a);<br>    printf(&quot;你输入的是%lf&quot;,a);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-4"><a href="#2-4" class="headerlink" title="2.4"></a>2.4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()<br>&#123;<br>int n = 0;<br>double m = 0;<br>n = 10 / 2;<br>m = 10.0 / 2.0;<br>printf(&quot;整型常量除：%d\n&quot;, 10 / 2);<br>printf(&quot;浮点型常量除：%f\n&quot;, 10.0 / 2.0);<br>printf(&quot;int型常量除：%d\n&quot;, n);<br>printf(&quot;double型常量除：%f\n&quot;, m);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-5"><a href="#2-5" class="headerlink" title="2.5"></a>2.5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br><br>puts(&quot;请输入两个整数：&quot;);<br>printf(&quot;整数1:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数2:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;a的值是b的值的%f%%&quot;,(double)(a*100)/b);<br>return 0;&#125;<br></code></pre></td></tr></table></figure><h3 id="2-6"><a href="#2-6" class="headerlink" title="2.6"></a>2.6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>    int a;<br>    printf(&quot;请输入你的身高:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>    printf(&quot;您的标准体重是%。lf公斤&quot;,(a-100)*0.9);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="3-1"><a href="#3-1" class="headerlink" title="3-1"></a>3-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br>printf(&quot;整数a:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>if(a/b)<br>puts(&quot;b不是a的约数&quot;);<br>else<br>puts(&quot;b是a的约数&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-2"><a href="#3-2" class="headerlink" title="3-2"></a>3-2</h3><p>结果变得相反 </p><h3 id="3-3"><a href="#3-3" class="headerlink" title="3-3"></a>3-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a;<br>printf(&quot;整数a:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>if(a==0)<br>printf(&quot;绝对值是0&quot;);<br>else if(a&gt;0)<br>printf(&quot;绝对值是%d&quot;,a);<br>else<br>printf(&quot;绝对值是%d&quot;,-a);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-4"><a href="#3-4" class="headerlink" title="3-4"></a>3-4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br>printf(&quot;整数a:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>if(a==b)<br>printf(&quot;a和b相等&quot;);<br>else if(a&gt;b)<br>printf(&quot;a大于b&quot;);<br>else<br>printf(&quot;a小于b&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-5"><a href="#3-5" class="headerlink" title="3-5"></a>3-5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()<br>&#123;<br>int a = 2;<br>int b = 3;<br><br>    printf(&quot;%d\n&quot;, a &gt; b);<br>    printf(&quot;%d\n&quot;, a &lt; b);<br>    printf(&quot;%d\n&quot;, a == b);<br>    printf(&quot;%d\n&quot;, a != b);<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-6"><a href="#3-6" class="headerlink" title="3-6"></a>3-6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b,c,min;<br>puts(&quot;请输入三个整数。&quot;);<br>printf(&quot;整数a:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;整数c:&quot;);    scanf(&quot;%d&quot;,&amp;c);<br>min=a;<br>if(b&lt;min)  min=b;<br>if(c&lt;min)  min=c;<br>printf(&quot;他们的最小值是%d&quot;,min);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-7"><a href="#3-7" class="headerlink" title="3-7"></a>3-7</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b,c,d,max;<br>puts(&quot;请输入四个整数。&quot;);<br>printf(&quot;整数a:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;整数c:&quot;);    scanf(&quot;%d&quot;,&amp;c);<br>printf(&quot;整数d:&quot;);    scanf(&quot;%d&quot;,&amp;d);<br>max=a;<br>if(b&gt;max)  max=b;<br>if(c&gt;max)  max=c;<br>if(d&gt;max)  max=d;<br>printf(&quot;他们的最大值是%d&quot;,max);<br>return 0;<br></code></pre></td></tr></table></figure><h3 id="3-8"><a href="#3-8" class="headerlink" title="3-8"></a>3-8</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int n1,n2;<br>puts(&quot;请输入两个整数&quot;);<br>printf(&quot;整数n1：&quot;);   scanf(&quot;%d&quot;,&amp;n1);<br>printf(&quot;整数n2：&quot;);   scanf(&quot;%d&quot;,&amp;n2);<br>if(n1&gt;n2)<br>printf(&quot;他们的差是%d&quot;,n1-n2);<br>else<br>printf(&quot;他们的差是%d&quot;,n2-n1);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-9"><a href="#3-9" class="headerlink" title="3-9"></a>3-9</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int n1,n2;<br>puts(&quot;请输入两个整数&quot;);<br>printf(&quot;整数n1：&quot;);   scanf(&quot;%d&quot;,&amp;n1);<br>printf(&quot;整数n2：&quot;);   scanf(&quot;%d&quot;,&amp;n2);<br>n1==n2?printf(&quot;他们是相等数&quot;):printf(&quot;他们不是相等数&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-10"><a href="#3-10" class="headerlink" title="3-10"></a>3-10</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b,c,min;<br>puts(&quot;请输入三个整数。&quot;);<br>printf(&quot;整数a:&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);    scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;整数c:&quot;);    scanf(&quot;%d&quot;,&amp;c);<br>if(a==b&amp;&amp;a==c)<br>printf(&quot;三个值相等&quot;);<br>else if(a!=b&amp;&amp;a!=c&amp;a!=c)<br>printf(&quot;三个值不相等&quot;);<br>else<br>printf(&quot;有两个值相等&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-11"><a href="#3-11" class="headerlink" title="3-11"></a>3-11</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br>puts(&quot;请输入两个整数&quot;);<br>printf(&quot;整数a:&quot;);   scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);   scanf(&quot;%d&quot;,&amp;b);<br>if(a-b&lt;=10||b-a&lt;=10)<br>printf(&quot;他们的差小于10&quot;);<br>else<br>printf(&quot;他们的差大于10&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-12"><a href="#3-12" class="headerlink" title="3-12"></a>3-12</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main() &#123;<br>int no, a;<br>printf(&quot;请输入一个整数：&quot;);   scanf(&quot;%d&quot;, &amp;no);<br>a=no%2;<br>switch (a)&#123;<br>case 0:puts(&quot;输入的整数是偶数&quot;);     break;<br>case 1:puts(&quot;输入的整数是奇数&quot;);     break;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-13"><a href="#3-13" class="headerlink" title="3-13"></a>3-13</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include&lt;stdio.h&gt;<br>int main()<br>&#123;<br>int month;<br>printf(&quot;请输入月份：&quot;); scanf(&quot;%d&quot;, &amp;month);<br>switch (month)<br>&#123;<br>case 1:printf(&quot;%d月是冬季&quot;, month); break;<br>case 2:printf(&quot;%d月是冬季&quot;,month); break;<br>case 3:printf(&quot;%d月是春季&quot;,month); break;<br>case 4:printf(&quot;%d月是春季&quot;,month); break;<br>case 5:printf(&quot;%d月是春季&quot;,month); break;<br>case 6:printf(&quot;%d月是夏季&quot;,month); break;<br>case 7:printf(&quot;%d月是夏季&quot;,month); break;<br>case 8:printf(&quot;%d月是夏季&quot;,month); break;<br>case 9:printf(&quot;%d月是秋季&quot;,month); break;<br>case 10:printf(&quot;%d月是秋季&quot;,month); break;<br>case 11:printf(&quot;%d月是秋季&quot;,month); break;<br>case 12:printf(&quot;%d月是冬季&quot;,month); break;<br>default:printf(&quot;%d月不存在！&quot;,month); break;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="4-1"><a href="#4-1" class="headerlink" title="4-1"></a>4-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main() &#123;<br>int no, a;<br>printf(&quot;请输入一个整数：&quot;);   scanf(&quot;%d&quot;, &amp;no);<br>int retry;<br>do&#123;<br>if(no==0)<br>puts(&quot;该整数是零&quot;);<br>else if(no&gt;0)<br>puts(&quot;该整数大于零&quot;);<br>else<br>puts(&quot;该整数小于零&quot;);<br>printf(&quot;是否继续？&lt;yes---0,no--9&gt;:&quot;);  scanf(&quot;%d&quot;,&amp;retry);<br>&#125;while(retry==0);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-2"><a href="#4-2" class="headerlink" title="4-2"></a>4-2</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b;<br>printf(&quot;请输入一个整数a:&quot;);   scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;请输入一个整数b:&quot;);  scanf(&quot;%d&quot;,&amp;b);<br>int sum=0;<br>if(a&gt;b)&#123;<br>int i=b;<br>do<br>&#123;<br>sum=sum+i;<br>i=i+1;<br>&#125;while(i&lt;=a);<br>printf(&quot;大于%d小于%d的所有整数和是%d\n&quot;,b,a,sum);<br>&#125;else&#123;<br>int i=a;<br>do&#123;<br>sum=sum+i;<br>i=i+1;<br>&#125;while(i&lt;=b);<br>printf(&quot;大于%d小于%d的所有整数和是%d\n&quot;,a,b,sum);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-3"><a href="#4-3" class="headerlink" title="4-3"></a>4-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int n;<br>printf(&quot;请输入一个整数：&quot;);    scanf(&quot;%d&quot;,&amp;n);<br>if(n&gt;=0)&#123;<br>while(n&gt;=0)&#123;<br>printf(&quot;%d&quot;,n);<br>n--;&#125;<br>&#125;else<br>puts(&quot;&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-4"><a href="#4-4" class="headerlink" title="4-4"></a>4-4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int n;<br>printf(&quot;请输入一个整数：&quot;);    scanf(&quot;%d&quot;,&amp;n);<br>if(n&gt;=0)&#123;<br>while(n&gt;=1)&#123;<br>printf(&quot;%d&quot;,n);<br>n--;&#125;<br>&#125;else<br>puts(&quot;&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-5"><a href="#4-5" class="headerlink" title="4-5"></a>4-5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i=1, n;<br>printf(&quot;请输入一个整数：&quot;);    scanf(&quot;%d&quot;,&amp;n);<br>if(i&gt;=0)&#123;<br>while(n&gt;=1)&#123;<br>printf(&quot;%d&quot;,i++);<br>n--;&#125;<br>&#125;else<br>puts(&quot;&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-6"><a href="#4-6" class="headerlink" title="4-6"></a>4-6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  no;<br>printf(&quot;请输入一个整数：&quot;);    scanf(&quot;%d&quot;,&amp;no);<br>int i;<br>while(i&lt;=no)&#123;<br>printf(&quot;%d&quot;,i);<br>i=i+2;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-7"><a href="#4-7" class="headerlink" title="4-7"></a>4-7</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  no;<br>printf(&quot;请输入一个正整数：&quot;);    scanf(&quot;%d&quot;,&amp;no);<br>int i;<br>while(i&lt;=no)&#123;<br>printf(&quot;%d&quot;,i);<br>i=i*2;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-8"><a href="#4-8" class="headerlink" title="4-8"></a>4-8</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  no;<br>printf(&quot;正整数：&quot;);    scanf(&quot;%d&quot;,&amp;no);<br>int i;<br>if(no&gt;=1)&#123;<br>while(no--&gt;1)<br>putchar(&#x27;*&#x27;);<br>putchar(&#x27;\n&#x27;);   <br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-9"><a href="#4-9" class="headerlink" title="4-9"></a>4-9</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  n;<br>printf(&quot;请输入正整数：&quot;);    scanf(&quot;%d&quot;,&amp;n);<br>int i=1;<br>if(n&gt;=0)&#123;<br>while(i&lt;=n)&#123;<br>if(i%2==0)&#123;<br>printf(&quot;-&quot;);<br>&#125;<br>else<br>printf(&quot;+&quot;);<br>i+=1;&#125;<br><br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-10"><a href="#4-10" class="headerlink" title="4-10"></a>4-10</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  n;<br>printf(&quot;请输入正整数：&quot;);    scanf(&quot;%d&quot;,&amp;n);<br>int i=1;<br>if(n&gt;=0)&#123;<br>while(n--&gt;0)&#123;<br>printf(&quot;-&quot;);&#125;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-11"><a href="#4-11" class="headerlink" title="4-11"></a>4-11</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  n;<br>do &#123;<br>printf(&quot;请输入正整数：&quot;);<br>scanf(&quot;%d&quot;, &amp;n);<br>if(n&lt;=0)&#123;<br>puts(&quot;请不要输入一个正整数。&quot;);<br>&#125;<br>&#125;while(n&lt;=0);<br>printf(&quot;该整数的逆向显示的结果是&quot;);<br>while(n&gt;0)&#123;<br>printf(&quot;%d&quot;,n%10);<br>n/=10;<br>&#125;<br>puts(&quot;。&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-12"><a href="#4-12" class="headerlink" title="4-12"></a>4-12</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  n,cnt=0;<br>do &#123;<br>printf(&quot;请输入正整数：&quot;);<br>scanf(&quot;%d&quot;, &amp;n);<br>if(n&lt;=0)&#123;<br>puts(&quot;请不要输入一个正整数。&quot;);<br>&#125;<br>&#125;while(n&lt;=0);<br>printf(&quot;该整数的位数是&quot;);<br>while(n&gt;0)&#123;<br>n/=10;<br>cnt+=1;<br>&#125;<br>printf(&quot;%d&quot;,cnt);<br>puts(&quot;。&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-13"><a href="#4-13" class="headerlink" title="4-13"></a>4-13</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int n,sum=0,i;<br>printf(&quot;n的值是：&quot;,n);<br>scanf(&quot;%d&quot;,&amp;n);<br>for(i=0;i&lt;=n;i++)&#123;<br>sum+=1;<br>&#125;<br>printf(&quot;1到%d:%d&quot;,n,sum);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-14"><a href="#4-14" class="headerlink" title="4-14"></a>4-14</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,i;<br>printf(&quot;请输入一个整数：&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>for(i=1;i&lt;=a;i++)&#123;<br>printf (&quot;%d&quot;,i%10);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-15"><a href="#4-15" class="headerlink" title="4-15"></a>4-15</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,b,c;<br>printf(&quot;开始数值(cm)：&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;结束数值(cm)：&quot;);<br>scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;间隔数值(cm)：&quot;);<br>scanf(&quot;%d&quot;,&amp;c);<br><br>    for(;a&lt;=b;a+=c)&#123;<br>        printf(&quot;%dcm&quot;,a);<br>        printf(&quot;       &quot;);<br>        printf(&quot;%.2f&quot;,(double)(a-100)*0.9);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-16"><a href="#4-16" class="headerlink" title="4-16"></a>4-16</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,i;<br>printf(&quot;整数值：&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>for(i+=1;i&lt;=a;i++)&#123;<br>if(i%2!=0)<br>printf(&quot;%d&quot;,i);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-17"><a href="#4-17" class="headerlink" title="4-17"></a>4-17</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,i;<br>printf(&quot;整数值：&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>for(i+=1;i&lt;=a;i++)<br>printf(&quot;%d的二次方是:%d\n&quot;,i,i*i);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-18"><a href="#4-18" class="headerlink" title="4-18"></a>4-18</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,i;<br>printf(&quot;显示多少个*&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>for(i+=1;i&lt;=a;i++)&#123;<br>printf(&quot;*&quot;);<br>if(i%5==0)<br>printf(&quot;\n&quot;);&#125;<br><br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-19"><a href="#4-19" class="headerlink" title="4-19"></a>4-19</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int a,i,cnt;<br>printf(&quot;整数值：&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>for(i+=1;i&lt;=a;i++) &#123;<br>printf(&quot;*&quot;);<br>if (a % i == 0) &#123;<br>printf(&quot;\n&quot;);<br>cnt = 1;<br>&#125;<br>&#125;<br>printf(&quot;约数有:%d&quot;,cnt);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-20"><a href="#4-20" class="headerlink" title="4-20"></a>4-20</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>printf(&quot; |&quot;);<br>int i,j;<br>for(i=1;i&lt;=9;i++)&#123;<br>printf(&quot;%3d&quot;,i);<br>&#125;<br>putchar(&#x27;\n&#x27;);<br>for (i=1;i&lt;=9;i++)&#123;<br>printf(&quot;----&quot;);<br>&#125;<br>putchar(&#x27;\n&#x27;);<br>for(i=1;i&lt;=9;i++)&#123;<br>printf(&quot;%d|&quot;,i);<br>for(j=1;j&lt;=9;j++)<br>printf(&quot;%3d&quot;,i*j);<br>putchar(&#x27;\n&#x27;);<br>&#125;return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-31"><a href="#4-31" class="headerlink" title="4-31"></a>4-31</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>int main() &#123;<br>int a,b,c;<br>printf(&quot;生成一个正方形。&quot;);<br>printf(&quot;正方形有几层：&quot;);    scanf(&quot;%d&quot;,&amp;a);<br>for(b=1;b&lt;=a;b++)&#123;<br>for(c=1;c&lt;=a;c++)<br>putchar(&#x27;*&#x27;);<br>putchar(&#x27;\n&#x27;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-22"><a href="#4-22" class="headerlink" title="4-22"></a>4-22</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main() &#123;<br>int a, b;<br>puts(&quot;让我们来画一个长方形&quot;);<br>printf(&quot;一边：&quot;);<br>scanf(&quot;%d&quot;, &amp;a);<br>printf(&quot;另一边：&quot;);<br>scanf(&quot;%d&quot;, &amp;b);<br>int h, w;<br>if (a &lt; b) &#123;<br>for (h = 1; h &lt;= a; h++) &#123;<br>for (w = 1; w &lt;= b; w++) &#123;<br>putchar(&#x27;*&#x27;);<br>&#125;<br>putchar(&#x27;\n&#x27;);<br>&#125;<br>&#125; else &#123;<br>for (h = 1; h &lt;= b; h++) &#123;<br>for (w = 1; w &lt;= a; w++) &#123;<br>putchar(&#x27;*&#x27;);<br>&#125;<br>putchar(&#x27;\n&#x27;);<br>&#125;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-23"><a href="#4-23" class="headerlink" title="4.23"></a>4.23</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs [c]">（1）左上角的等腰三角形<br><br>#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  i,j,len;<br>puts(&quot;生成直角在左上方的等腰直角三角形。&quot;);<br>printf(&quot;短边：&quot;);     scanf(&quot;%d&quot;,&amp;len);<br><br>for(i=1;i&lt;=len;i++)&#123;<br>for(j=0;j&lt;=len-i;j++)<br>putchar(&#x27;*&#x27;);<br>putchar(&#x27;\n&#x27;);&#125;<br><br>return 0;<br>&#125;<br>内循环结束了，外循环才能继续运行。<br><br>（2）右上方的等腰三角形<br><br>#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  i,j,len;<br>puts(&quot;生成直角在右上方的等腰直角三角形。&quot;);<br>printf(&quot;短边：&quot;);     scanf(&quot;%d&quot;,&amp;len);<br><br>for(i=0;i&lt;=len;i++)&#123;<br>for(j=1;j&lt;=len-i;j++)<br>putchar(&#x27;*&#x27;);<br>for(j=0;j&lt;=i;j++)<br>putchar(&#x27; &#x27;);<br>putchar(&#x27;\n&#x27;);&#125;<br><br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-24"><a href="#4-24" class="headerlink" title="4-24"></a>4-24</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  i,j,len;<br>puts(&quot;让我们来画一个金字塔。&quot;);<br>printf(&quot;金字塔有几层：&quot;);     scanf(&quot;%d&quot;,&amp;len);<br>for(i=1;i&lt;=len;i++)&#123;<br>for(j=1;j&lt;=len-i;j++)<br>printf(&quot; &quot;);       /*输出左边的空格*/<br>for(j=1;j&lt;=(i-1);j++)<br>printf(&quot;*&quot;);      /*左侧的*号*/<br>printf(&quot;*&quot;);          /*中间的*号*/<br>for(j=1;j&lt;=(i-1);j++)<br>printf(&quot;*&quot;);         /*右侧的*号*/<br>printf(&quot;\n&quot;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-25"><a href="#4-25" class="headerlink" title="4-25"></a>4-25</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int  i,j,len;<br>puts(&quot;让我们来画一个向下金字塔。&quot;);<br>printf(&quot;金字塔有几层：&quot;);     scanf(&quot;%d&quot;,&amp;len);<br>for(i=1;i&lt;=len;i++)&#123;<br>for(j=1;j&lt;=i-1;j++)<br>printf(&quot; &quot;);       /*输出左边的空格*/<br>for(j=1;j&lt;=len-i;j++)<br>printf(&quot;%d&quot;,i%10);      /*左侧的*号*/<br>printf(&quot;%d&quot;,i%10);          /*中间的*号*/<br>for(j=1;j&lt;=len-i;j++)<br>printf(&quot;%d&quot;,i%10);         /*右侧的*号*/<br>printf(&quot;\n&quot;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="5-1"><a href="#5-1" class="headerlink" title="5-1"></a>5-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i;<br>int v[5];<br>for(i=0;i&lt;5;i++)<br>v[i]=i;<br>for(i=0;i&lt;5;i++)<br>printf(&quot;[%d]=%d\n&quot;,i,v[i]);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>&lt;&gt;5-2 </p><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i,c=5;<br>int v[5];<br>for(i=0;i&lt;5;i++)<br>v[i]=i+1;<br>for(i=0;i&lt;5;i++) &#123;<br>c--;<br>printf(&quot;[%d]=%d\n&quot;, i, v[c]);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-3"><a href="#5-3" class="headerlink" title="5-3"></a>5-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i;<br>int v[5]=&#123;5,4,3,2,1&#125;;<br>for(i=0;i&lt;5;i++)<br>printf(&quot;v[%d]=%d\n&quot;,i,v[i]);<br>return 0;<br>&#125;<br><br>#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i;<br>int a[5]=&#123;5,4,3,2,1&#125;;<br>int b[5];<br>for(i=0;i&lt;5;i++)<br>b[i]=a[i];<br>puts(&quot;   a   b&quot;);<br>puts(&quot;---------&quot;);<br>for (i=0;i&lt;5;i++)<br>printf(&quot;%4d%4d\n&quot;,a[i],b[i]);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-4"><a href="#5-4" class="headerlink" title="5-4"></a>5-4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i;<br>int a[5]=&#123;36,23,17&#125;;<br>int b[5];<br>for(i=0;i&lt;5;i++)<br>b[4-i]=a[i];<br>puts(&quot;   a   b&quot;);<br>puts(&quot;---------&quot;);<br>for (i=0;i&lt;5;i++)<br>printf(&quot;%4d%4d\n&quot;,a[i],b[i]);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-5"><a href="#5-5" class="headerlink" title="5-5"></a>5-5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 7   /*数组元素总数*/<br>int main()&#123;<br>int i;<br>int x[NUMBER];<br>for(i=0;i&lt;NUMBER;i++)&#123;<br>printf(&quot;x[%d]:&quot;,i);<br>scanf(&quot;%d&quot;,&amp;x[i]);<br>&#125;<br>for (i=0;i&lt;NUMBER-4;i++)&#123;<br>int temp=x[i];<br>x[i]=x[NUMBER-1-i];<br>x[NUMBER-1-i]=temp;<br>&#125;<br>puts(&quot;倒序排列了。&quot;);<br>for(i=0;i&lt;NUMBER;i++)<br>printf(&quot;x[%d]=%d\n&quot;,i,x[i]);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-6"><a href="#5-6" class="headerlink" title="5-6"></a>5-6</h3><h3 id="a-1-0-b-1"><a href="#a-1-0-b-1" class="headerlink" title="a&#x3D;1.0   b&#x3D;1"></a>a&#x3D;1.0   b&#x3D;1</h3><h3 id="5-7"><a href="#5-7" class="headerlink" title="5-7"></a>5-7</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 100    /*数组元素总数*/<br>int main()&#123;<br>int a,i;<br>int x[NUMBER];<br>printf(&quot;数据个数：&quot;);   scanf(&quot;%d&quot;,&amp;a);<br><br>for(i=0;i&lt;a;i++)&#123;<br>printf(&quot;x[%d]号:&quot;,i+1);<br>scanf(&quot;%d&quot;,&amp;x[i]);<br>&#125;<br>putchar(&#x27;&#123;&#x27;);<br>printf(&quot;%d&quot;,x[0]);<br>for(i=1;i&lt;a;i++)<br>&#123;<br>printf(&quot;， %d&quot;,x[i]);<br>&#125;<br>printf(&quot;&#125;\n&quot;);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-8"><a href="#5-8" class="headerlink" title="5-8&lt;\p&gt;"></a>5-8&lt;\p&gt;</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 80   /*数组元素总数*/<br>int main()&#123;<br>int i,j;<br>int num;<br>int tensu[NUMBER];<br>int bunpu[11]=&#123;0&#125;;<br><br>    printf(&quot;请输入学生的人数：&quot;);<br>    do&#123;<br>        scanf(&quot;%d&quot;,&amp;num);<br>        if(num&lt;1||num&gt;NUMBER)<br>            printf(&quot;\a请输入1~%d的数： &quot;,NUMBER);<br>    &#125;while (num&lt;1||num&gt;NUMBER);<br> <br>    printf(&quot;请输入%d人的分数。\n&quot;,num);<br> <br>    for(i=0;i&lt;num;i++)&#123;<br>        printf(&quot;%2d号:&quot;,i+1);<br>        do&#123;<br>            scanf(&quot;%d&quot;,&amp;tensu[i]);<br>            if (tensu[i] &lt; 0 || tensu[i] &gt; 100)<br>                printf(&quot;\a请输入1~100的数：&quot;);<br>        &#125;while(tensu[i]&lt;0||tensu[i]&gt;100);<br>        bunpu[tensu[i]/10]++;<br>    &#125;<br> <br>    puts(&quot;\n----分布图-----&quot;);<br> <br>    for(i=0;i&lt;=9;i++)&#123;<br>        printf(&quot;%3d-%3d：&quot;,i*10,i*10+9);<br>        for(j=0;j&lt;=bunpu[i];j++)<br>            putchar(&#x27;*&#x27;);<br>        putchar(&#x27;\n&#x27;);<br>    &#125;<br>    <br>    printf(&quot;    100:&quot;);<br>    for(j=0;j&lt;bunpu[10];j++)&#123;<br>        putchar(&#x27;*&#x27;);&#125;<br>    putchar(&#x27;\n&#x27;);<br>    return 0;<br> <br><br>### 5-9 <br>``` [c] bush                                                                                                           <br>#include &lt;stdio.h&gt;<br><br>#define NUMBER 80<br><br>int main()<br>&#123;<br>int i,j;<br>int num;<br>int score[NUMBER];<br>int scattergram[11]=&#123;0&#125;;<br>int max;<br>int max_x;<br><br>    printf(&quot;请输入学生人数：&quot;);<br> <br>    do&#123;<br>        scanf(&quot;%d&quot;,&amp;num);<br>        if(num&lt;1 || num&gt;NUMBER)<br>            printf(&quot;请输入1~%d之间的整数：&quot;,NUMBER);<br>    &#125;while(num&lt;1 || num&gt;NUMBER);<br> <br>    printf(&quot;请输入%d人的分数。\n&quot;,num);<br>    for(i=0;i&lt;num;i++)<br>    &#123;<br>        printf(&quot;%d号：&quot;,i+1);<br>        do&#123;<br>            scanf(&quot;%d&quot;,&amp;score[i]);<br>            if(score[i]&lt;0 || score[i]&gt;100)<br>            &#123;<br>                printf(&quot;请输入0~100之间的整数：&quot;);<br>            &#125;<br>        &#125;while(score[i]&lt;0 || score[i]&gt;100);<br>        scattergram[score[i]/10]++;<br>    &#125;<br> <br>    max=scattergram[0];<br>    for(i=1;i&lt;11;i++)<br>    &#123;<br>        if(scattergram[i]&gt;max)<br>            max=scattergram[i];<br>    &#125;     /*确定最高层数*/<br> <br>    max_x=max;<br>    for(i=0;i&lt;max_x;i++)<br>    &#123;<br>        for(j=0;j&lt;11;j++)<br>        &#123;<br>            if(max&gt;scattergram[j])<br>                printf(&quot;    &quot;);<br>            else<br>                printf(&quot;*   &quot;);<br>        &#125;<br>        putchar(&#x27;\n&#x27;);<br> <br>        max -= 1;<br>    &#125;<br>    printf(&quot;--------------------------------------------\n&quot;);<br> <br>    for(i=1;i&lt;=11;i++)<br>    &#123;<br>        printf(&quot; %d &quot;,(i-1)*10);<br>    &#125;<br> <br>    putchar(&#x27;\n&#x27;);<br> <br>    return 0;<br>&#125;<br><br>垂直的直方图其实是一层一层打印出来的      if句确定他的最高层   然后再循环<br></code></pre></td></tr></table></figure><h3 id="5-10"><a href="#5-10" class="headerlink" title="5-10"></a>5-10</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main() &#123;<br>int i, j, k;<br>int tensu1[4][3], tensu2[3][4];<br>int product[4][4] = &#123;0&#125;;<br><br>    puts(&quot;请输入第一个矩阵的具体元素&quot;);<br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 3; j++) &#123;<br>            printf(&quot;tensu1[%d][%d]: &quot;, i, j);<br>            scanf(&quot;%d&quot;, &amp;tensu1[i][j]);<br>        &#125;<br>    &#125;<br> <br>    puts(&quot;请输入第二个矩阵的具体元素&quot;);<br>    for (i = 0; i &lt; 3; i++) &#123;<br>        for (j = 0; j &lt; 4; j++) &#123;<br>            printf(&quot;tensu2[%d][%d]: &quot;, i, j);<br>            scanf(&quot;%d&quot;, &amp;tensu2[i][j]);<br>        &#125;<br>    &#125;<br> <br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 4; j++) &#123;<br>            for (k = 0; k &lt; 3; k++) &#123;<br>                product[i][j] += tensu1[i][k] * tensu2[k][j];<br>            &#125;<br>        &#125;<br>    &#125;<br> <br>    puts(&quot;显示矩阵1：&quot;);<br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 3; j++) &#123;<br>            printf(&quot;%6d&quot;, tensu1[i][j]);<br>        &#125;<br>        putchar(&#x27;\n&#x27;);<br>    &#125;<br> <br>    puts(&quot;显示矩阵2：&quot;);<br>    for (i = 0; i &lt; 3; i++) &#123;<br>        for (j = 0; j &lt; 4; j++) &#123;<br>            printf(&quot;%6d&quot;, tensu2[i][j]);<br>        &#125;<br>        putchar(&#x27;\n&#x27;);<br>    &#125;<br> <br>    puts(&quot;显示乘积矩阵：&quot;);<br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 4; j++) &#123;<br>            printf(&quot;%6d&quot;, product[i][j]);<br>        &#125;<br>        putchar(&#x27;\n&#x27;);<br>    &#125;<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-11"><a href="#5-11" class="headerlink" title="5-11"></a>5-11</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main() &#123;<br>int i, j=1;<br>int tensu1[6], tensu2[6];<br>int sum1=0, sum2=0, sum3=0;<br>puts(&quot;请输入六名学生的两门成绩&quot;);<br><br>    do&#123;j+=1;<br>        for (i = 0; i &lt; 6; i++) &#123;<br>            printf(&quot;%d号  &quot;, i + 1);<br>            do &#123;<br>                printf(&quot;语文：&quot;);<br>                scanf(&quot;%d&quot;, &amp;tensu1[i]);<br>                if (tensu1[i] &lt; 0 || tensu1[i] &gt; 100)<br>                    printf(&quot;请输入1~100的数：&quot;);<br>            &#125; while (tensu1[i] &lt; 0 || tensu1[i] &gt; 100);<br>            sum2 += tensu1[i];<br>        &#125;<br> <br>        for (i = 0; i &lt; 6; i++) &#123;<br>            printf(&quot;%d号  &quot;, i + 1);<br>            do &#123;<br>                printf(&quot;数学：&quot;);<br>                scanf(&quot;%d&quot;, &amp;tensu2[i]);<br>                if (tensu2[i] &lt; 0 || tensu2[i] &gt; 100)<br>                    printf(&quot;请输入1~100的数：&quot;);<br>            &#125; while (tensu2[i] &lt; 0 || tensu2[i] &gt; 100);<br>            sum3 += tensu2[i];<br>        &#125;<br> <br>        for (i = 0; i &lt; 6; i++) &#123;<br>            sum1 = tensu1[i] + tensu2[i];<br>            printf(&quot;%d号两门总分为%d,平均分为%.2f   &quot;,i+1,sum1, (double) sum1 / 2);<br>            putchar(&#x27;\n&#x27;);<br>        &#125;<br>     putchar(&#x27;\n&#x27;);<br>    &#125;while(j&gt;6);<br>    <br>    printf(&quot;语文的总分：%5d,平均分:%.2f\n&quot;,sum2,(double)sum2/6);<br>    printf(&quot;数学的总分：%5d,平均分:%.2f\n&quot;,sum3,(double)sum3/6);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-12"><a href="#5-12" class="headerlink" title="5-12"></a>5-12</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()<br>&#123;<br>int i,j,k;<br>int course[2][4][3]=&#123;&#123;&#123;91,63,78&#125;,&#123;67,72,46&#125;,&#123;89,34,53&#125;,&#123;32,54,34&#125;&#125;,<br>&#123;&#123;97,67,82&#125;,&#123;73,43,46&#125;,&#123;97,56,21&#125;,&#123;85,46,35&#125;&#125;&#125;;<br><br>    for(i=0;i&lt;2;i++)<br>    &#123;<br>        printf(&quot;第%d次考试的分数\n&quot;,i+1);<br>        for(j=0;j&lt;4;j++)<br>        &#123;<br>            printf(&quot;%d:&quot;,j+1);<br>            for(k=0;k&lt;3;k++)<br>            &#123;<br>                printf(&quot;%4d&quot;,course[i][j][k]);<br>            &#125;<br>            putchar(&#x27;\n&#x27;);<br>        &#125;<br>        putchar(&#x27;\n&#x27;);<br>    &#125;<br>    <br>    puts(&quot;总分&quot;);<br>    for(i=0;i&lt;1;i++)<br>    &#123;<br>        for(j=0;j&lt;4;j++)<br>        &#123;<br>            printf(&quot;%d:&quot;,j+1);<br>            for(k=0;k&lt;3;k++)<br>            &#123;<br>                printf(&quot;%4d&quot;,course[i][j][k]+course[i+1][j][k]);<br>            &#125;<br>            putchar(&#x27;\n&#x27;);<br>        &#125;<br>    &#125;<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h3><h3 id="6-1"><a href="#6-1" class="headerlink" title="6-1"></a>6-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int min2(int a,int b) &#123;<br>if (a &lt; b)<br>return a;<br>else<br>return b;<br>&#125;<br>int main()&#123;<br>int a,b;<br>puts(&quot;请输入两个整数：&quot;);<br>printf(&quot;整数a:&quot;);   scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;整数b:&quot;);   scanf(&quot;%d&quot;,&amp;b);<br>printf(&quot;最小值是%d。\n&quot;,min2(a,b));<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-2"><a href="#6-2" class="headerlink" title="6-2"></a>6-2</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int min3(int a,int b,int c) &#123;<br>int min=a;<br>if(b&lt;min)     b=min;<br>if(c&lt;min)     c=min;<br>return min ;<br>&#125;<br><br>    int main()&#123;<br>        int a,b,c;<br>        puts(&quot;请输入三个整数：&quot;);<br>        printf(&quot;整数a:&quot;);   scanf(&quot;%d&quot;,&amp;a);<br>        printf(&quot;整数b:&quot;);   scanf(&quot;%d&quot;,&amp;b);<br>        printf(&quot;整数c:&quot;);   scanf(&quot;%d&quot;,&amp;c);<br>        printf(&quot;最小值是%d。\n&quot;,min3(a,b,c));<br>        return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-3"><a href="#6-3" class="headerlink" title="6-3"></a>6-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int cbue(int x) &#123;<br>return x*x*x;<br>&#125;<br>int main()&#123;<br>int x;<br>printf(&quot;请输入一个整数：&quot;);<br>scanf(&quot;%d&quot;,&amp;x);<br>printf(&quot;该整数的立方是：%d&quot;,cbue(x));<br>return 0;<br>&#125;<br>6-4<br>#include &lt;stdio.h&gt;<br>int  spr(int x) &#123;<br>return x*x;<br>&#125;<br>int pow4(int x)&#123;<br>return spr(x*x);<br>&#125;<br>int main()&#123;<br>int x;<br>printf(&quot;请输入一个整数：&quot;);<br>scanf(&quot;%d&quot;,&amp;x);<br>printf(&quot;该整数的四次方是：%d&quot;,pow4(x));<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-5"><a href="#6-5" class="headerlink" title="6-5"></a>6-5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int  sumup(int n) &#123;<br>int i;<br>int tmp=0;<br>for(i=1;i&lt;=n;i++)<br>tmp+=i;<br>return tmp;<br><br>&#125;<br>int main()&#123;<br>int a;<br>printf(&quot;请输n的值：&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>printf(&quot;从1到%d和是：%d&quot;,a, sumup(a));<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-6"><a href="#6-6" class="headerlink" title="6-6"></a>6-6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>void alert(int n) &#123;<br>while(n--&gt;0)<br>putchar(&#x27;\a&#x27;);<br><br>&#125;<br>int main()&#123;<br>int a;<br>printf(&quot;请输入多少次铃声&quot;);<br>scanf(&quot;%d&quot;,&amp;a);<br>alert(a);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-7"><a href="#6-7" class="headerlink" title="6-7"></a>6-7</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>void hello(void)&#123;<br>printf(&quot;你好.\n&quot;);<br>&#125;<br>int main()&#123;<br>hello();<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-8"><a href="#6-8" class="headerlink" title="6-8"></a>6-8</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 5<br>int min_of(const int v[],int n)&#123;<br>int i;<br>int min=v[0];<br>for(i=1;i&lt;n;i++)<br>if(v[i]&lt;min)<br>min=v[i];<br>return min;<br>&#125;<br>int main()&#123;<br>int i;<br>int v[NUMBER]=&#123;0&#125;;<br>printf(&quot;请输入%d个元素:&quot;,NUMBER);<br>for (i=0;i&lt;NUMBER;i++)<br>&#123;<br>printf(&quot;%d：&quot;,i+1);<br>scanf(&quot;%d&quot;,&amp;v[i]);<br>&#125;<br>printf(&quot;最小值是%d。\n&quot;,min_of(v,NUMBER));<br>return 0;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-9"><a href="#6-9" class="headerlink" title="6-9"></a>6-9</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 7<br><br>void rev_intary(int v[],int n)&#123;<br>int i;<br>for(i=0;i&lt;n-4;i++)<br>&#123;<br>int temp=v[i];<br>v[i] =v[n-1-i];<br>v[n-1-i]=temp;<br>&#125;<br><br>&#125;<br><br>int main()&#123;<br>int i;<br>int x[NUMBER];<br>for(i=0;i&lt;NUMBER;i++) &#123;<br>printf(&quot;x[%d]&quot;, i);<br>scanf(&quot;%d&quot;, &amp;x[i]);<br>&#125;<br>rev_intary(x,NUMBER);<br><br>    puts(&quot;倒序排列了！&quot;);<br> <br>    for (i=0;i&lt;NUMBER;i++)<br>    &#123;<br>        printf(&quot;x[%d]：%d\n&quot;,i,x[i]);<br>    &#125;<br> <br>    return 0;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-10"><a href="#6-10" class="headerlink" title="6-10"></a>6-10</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 7<br><br>void rev_intary(int v[], int n) &#123;<br>int i;<br>for (i = 0; i &lt; n / 2; i++) &#123;<br>int temp = v[i];<br>v[i] = v[n - 1 - i];<br>v[n - 1 - i] = temp;<br>&#125;<br>&#125;<br><br>void intary_rcpy(int v1[], const int v2[], int n) &#123;<br>int i;<br>for (i = 0; i &lt; n; i++) &#123;<br>v1[i] = v2[i];<br>&#125;<br>&#125;<br><br>int main() &#123;<br>int i;<br>int v1[NUMBER];<br>int v2[NUMBER];<br><br>    for (i = 0; i &lt; NUMBER; i++) &#123;<br>        printf(&quot;v[%d]: &quot;, i);<br>        scanf(&quot;%d&quot;, &amp;v2[i]);<br>    &#125;<br>    <br>    rev_intary(v2, NUMBER);<br>    intary_rcpy(v1, v2, NUMBER);<br> <br>    puts(&quot;倒序排列了！&quot;);<br> <br>    for (i = 0; i &lt; NUMBER; i++) &#123;<br>        printf(&quot;v2[%d]: %d\n&quot;, i, v2[i]);<br>    &#125;<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-11"><a href="#6-11" class="headerlink" title="6-11"></a>6-11</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 7<br>#define FAILED -1<br><br>int search_idx(const int v[], int idx[], int key, int n) &#123;<br>int i;<br>int temp = 0;<br><br>    for (i = 0; i &lt; n; i++) &#123;<br>        if (v[i] == key) &#123;<br>            idx[temp] = i;<br>            temp += 1;<br>        &#125;<br>    &#125;<br>    return (temp &gt; 0) ? temp : FAILED;<br>&#125;<br><br>int main() &#123;<br>int i, ky, y;<br>int idx[NUMBER], vx[NUMBER + 1];<br>for (i = 0; i &lt; NUMBER; i++) &#123;<br>printf(&quot;vx[%d]:&quot;, i);<br>scanf(&quot;%d&quot;, &amp;vx[i]);<br>&#125;<br>printf(&quot;要查找的值:&quot;);<br>scanf(&quot;%d&quot;, &amp;ky);<br>y = search_idx(vx, idx, ky, NUMBER);<br>if (y == FAILED)<br>puts(&quot;\a查找失败。&quot;);<br>else<br>printf(&quot;%d&quot;, y);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-12"><a href="#6-12" class="headerlink" title="6-12"></a>6-12</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>void mat_mul(const int a[4][3],const int b [3][4],int c[4][3])&#123;<br>int i, j, k;<br><br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 3; j++) &#123;<br>            c[i][j] = 0; &#125;<br>            for (k = 0; k &lt; 3; k++) &#123;<br>                c[i][j] += a[i][k] * b[k][j];<br>            &#125;<br>        &#125;<br>    &#125;<br><br>int main()&#123;<br>int i,j;<br>int tensu1[4][3],tensu2[3][4],tensu3[3][3];<br>puts(&quot;请输入4行3列矩阵元素&quot;);<br>for(i=0;i&lt;4;i++)&#123;<br>for(j=0;j&lt;3;j++)&#123;<br>printf(&quot;tensu[%d][%d]=&quot;,i,j);<br>scanf(&quot;%d&quot;,&amp;tensu1[i][j]);<br>&#125;<br>&#125;<br>puts(&quot;请输入3行4列矩阵元素&quot;);<br>for(i=0;i&lt;3;i++)&#123;<br>for(j=0;j&lt;4;j++)&#123;<br>printf(&quot;[tensu2[%d][%d]=&quot;,i,j);<br>scanf(&quot;%d&quot;,&amp;tensu1[i][j]);<br>&#125;<br>&#125;<br>mat_mul(tensu1,tensu2,tensu3);<br>printf(&quot;两个矩阵的乘积为:\n&quot;);<br>for (i = 0; i &lt; 4; i++) &#123;<br>for (j = 0; j &lt; 3; j++) &#123;<br>printf(&quot;%4d&quot;, tensu3[i][j]);<br>&#125;<br>putchar(&#x27;\n&#x27;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-13"><a href="#6-13" class="headerlink" title="6-13"></a>6-13</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>void mat_add(const int a[4][3], const int b[4][3], int c[2][4][3]) &#123;<br>int i, j;<br><br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 3; j++) &#123;<br>            c[0][i][j] = a[i][j]; // 存储第一次考试的分数<br>            c[1][i][j] = b[i][j]; // 存储第二次考试的分数<br>        &#125;<br>    &#125;<br>&#125;<br><br>void mat_print(const int m[4][3]) &#123;<br>int i, j;<br><br>    for (i = 0; i &lt; 4; i++) &#123;<br>        for (j = 0; j &lt; 3; j++) &#123;<br>            printf(&quot;%4d&quot;, m[i][j]);<br>        &#125;<br>        putchar(&#x27;\n&#x27;);<br>    &#125;<br>&#125;<br><br>int main() &#123;<br>int tensu1[4][3] = &#123;&#123;91, 63, 78&#125;, &#123;67, 72, 46&#125;, &#123;89, 34, 53&#125;, &#123;32, 54, 34&#125;&#125;;<br>int tensu2[4][3] = &#123;&#123;97, 67, 82&#125;, &#123;73, 43, 46&#125;, &#123;97, 56, 21&#125;, &#123;85, 46, 35&#125;&#125;;<br>int sum[2][4][3];<br><br>    mat_add(tensu1, tensu2, sum);<br>    puts(&quot;第一次考试的分数&quot;);<br>    mat_print(tensu1);<br>    puts(&quot;第二次考试的分数&quot;);<br>    mat_print(tensu2);<br>    puts(&quot;总分（储存在三维数组中）&quot;);<br>    for (int i = 0; i &lt; 2; i++) &#123;<br>        for (int j = 0; j &lt; 4; j++) &#123;<br>            for (int k = 0; k &lt; 3; k++) &#123;<br>                printf(&quot;%4d&quot;, sum[i][j][k]);<br>            &#125;<br>            putchar(&#x27;\n&#x27;);<br>        &#125;<br>    &#125;<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-14"><a href="#6-14" class="headerlink" title="6-14"></a>6-14</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int fx;<br>int main()&#123;<br>int i;<br>static double sa[5];<br>for(i=0;i&lt;5;i++)<br>printf(&quot;sa[%d]=%.1f\n&quot;,i,sa[i]);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-15"><a href="#6-15" class="headerlink" title="6-15"></a>6-15</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int x;<br>void put_count()&#123;<br>printf(&quot;put_count:第%d次&quot;,x+1);<br>x++;<br>putchar(&#x27;\n&#x27;);<br>&#125;<br>int main ()&#123;<br>int i,j;<br>printf(&quot;要调用多少次：&quot;);<br>scanf(&quot;%d&quot;,&amp;i);<br>for(j=0;j&lt;i;j++)&#123;<br>put_count();<br><br>    &#125;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><h3 id="8-1"><a href="#8-1" class="headerlink" title="8-1"></a>8-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>#define diff(x,y) ((x)-(y))<br><br>int main()<br>&#123;<br>int x,y;<br><br>    printf(&quot;请输入两个整数：&quot;);<br>    scanf(&quot;%d %d&quot;,&amp;x,&amp;y);<br>    printf(&quot;两数之差为%d。\n&quot;,x&gt;y?diff(x,y):diff(y,x));<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-3"><a href="#8-3" class="headerlink" title="8-3"></a>8-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>#define swap(type,a,b) &#123;type temp;temp=(a);(a)=(b);(b)=temp;&#125;<br><br>int main()<br>&#123;<br>int x,y;<br><br>    printf(&quot;x = &quot;);    scanf(&quot;%d&quot;,&amp;x);<br>    printf(&quot;y = &quot;);    scanf(&quot;%d&quot;,&amp;y);<br>    swap(int,x,y);<br>    printf(&quot;这两个数已经互换了。\n&quot;);<br>    printf(&quot;x = %d\n&quot;,x);<br>    printf(&quot;y = %d\n&quot;,y);<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-4"><a href="#8-4" class="headerlink" title="8-4"></a>8-4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br># define NUMBER 5<br>void bsort(int a[],int n)&#123;<br>int i,j;<br>for(i=n-1;i&gt;0;i--)&#123;<br>for(j=0;j&lt;i;j++)&#123;<br>if(a[j]&lt;a[j+1])&#123;<br>int temp =a[j];<br>a[j]=a[j+1];<br>a[j+1]=temp;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>int main()&#123;<br>int i;<br>int height[NUMBER];<br>printf(&quot;请输入%d人的身高。\n&quot;,NUMBER);<br>for(i=0;i&lt;NUMBER;i++)&#123;<br>printf(&quot;%2d号：&quot;,i+1);<br>scanf(&quot;%d&quot;,&amp;height[i]);<br>&#125;<br>bsort(height,NUMBER);<br>puts(&quot;按降序排列。&quot;);<br>for(i=0;i&lt;NUMBER;i++)&#123;<br>printf(&quot;%2d号：%d\n&quot;,i+1,height[i]);<br><br>    &#125;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-5"><a href="#8-5" class="headerlink" title="8-5"></a>8-5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>enum sex &#123;male,female&#125;;<br>enum season    &#123;spring=1,summer,autumn,winter&#125;;<br><br>void select_sex(enum sex m)&#123;<br>switch(m)&#123;<br>case male:printf(&quot;先生&quot;); break;<br>case female:printf(&quot;女士&quot;);break;<br>default :printf(&quot;请正确选择性别！&quot;);  break;<br>&#125;<br>&#125;<br><br>void select_season (int n)&#123;<br>switch (n)<br>&#123;<br>case spring    :    puts(&quot;你最喜欢的是春季。&quot;);        break;<br>case summer    :    puts(&quot;你最喜欢的是夏季。&quot;);        break;<br>case autumn    :    puts(&quot;你最喜欢的是秋季。&quot;);        break;<br>case winter    :    puts(&quot;你最喜欢的是冬季。&quot;);        break;<br>default        :    puts(&quot;请正确选择季节。&quot;);        break;<br>&#125;<br><br>&#125;<br>int main()<br>&#123;<br>enum sex a;<br>int b;<br><br>    printf(&quot;请选择你的性别【0…男士】【1…女士)】：&quot;);<br>    scanf(&quot;%d&quot;,&amp;a);<br> <br>    printf(&quot;你最喜欢的季节是【1…春季】【2…夏季】【3…秋季】【4…冬季】：&quot;);<br>    scanf(&quot;%d&quot;,&amp;b);<br> <br>    select_sex(a);<br>    select_season(b);<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-6"><a href="#8-6" class="headerlink" title="8-6"></a>8-6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int factorial(int n) &#123;<br>int result = 1;<br><br>    for (int i = 1; i &lt;= n; i++) <br>        result *= i;<br>    return result;<br>&#125;<br><br>int main() &#123;<br>int num;<br>printf(&quot;请输入一个整数：&quot;);<br>scanf(&quot;%d&quot;, &amp;num);<br><br>    if (num &lt; 0) &#123;<br>        printf(&quot;阶乘只定义于非负整数。\n&quot;);<br>    &#125; else &#123;<br>        printf(&quot;该整数的阶乘为 %d.\n&quot;, factorial(num));<br>    &#125;<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-7"><a href="#8-7" class="headerlink" title="8-7###"></a>8-7###</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include&lt;stdio.h&gt;<br><br>int combination(int n,int r);<br><br>int main(void)<br>&#123;<br>int n;<br>int r;<br><br>    do<br>    &#123;<br>        printf(&quot;请输入整数n：&quot;);<br>        scanf(&quot;%d&quot;,&amp;n);<br>        printf(&quot;请输入整数r：&quot;);<br>        scanf(&quot;%d&quot;,&amp;r);<br>        if(n&lt;=0||r&lt;0||n&lt;r)<br>        &#123;<br>            puts(&quot;请输入正确数量！&quot;);<br>        &#125;<br>    &#125;while(n&lt;=0||r&lt;0||n&lt;r);<br> <br>    printf(&quot;%d个整数中取%d个整数的组合数为%d。\n&quot;,n,r,combination(n,r));<br> <br>    return 0;<br>&#125;<br><br>int combination(int n,int r)<br>&#123;<br>if (r == 1)<br>&#123;<br>return n;<br>&#125;<br>else if (r==0 || r==n)<br>&#123;<br>return 1;<br>&#125;<br>else<br>&#123;<br>return combination(n-1,r-1)+combination(n-1,r);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-8"><a href="#8-8" class="headerlink" title="8-8"></a>8-8</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>int gcd(int x, int y) &#123;<br>if (y == 0) &#123;<br>return x;<br>&#125; else &#123;<br>return gcd(y, x % y);<br>&#125;<br>&#125;<br><br>int main() &#123;<br>int x = 48;<br>int y = 18;<br>int result = gcd(x, y);<br>printf(&quot;GCD of %d and %d is %d\n&quot;, x, y, result);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-9"><a href="#8-9" class="headerlink" title="8-9"></a>8-9</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i=1,ch;<br>while((ch=getchar())!=EOF)&#123;<br>switch(ch)&#123;<br>case &#x27;\n&#x27;: i++; break;<br>&#125;<br>&#125;<br>printf(&quot;标准输入中出现的行数：%d&quot;,i);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-10"><a href="#8-10" class="headerlink" title="8-10"></a>8-10</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>int i,ch;<br>int cnt[10]=&#123;0&#125;;<br>while((ch=getchar())!=EOF)&#123;<br>if(ch&gt;=&#x27;0&#x27;&amp;&amp;ch&lt;=&#x27;9&#x27;)<br>cnt[ch-&#x27;0&#x27;]++;<br>&#125;<br>puts(&quot;数字字符串的出现次数&quot;);<br>for(i=0;i&lt;10;i++)&#123;<br>printf(&quot;%d:&quot;,i);<br>for (int j = 0; j &lt; cnt[i]; j++) &#123;<br>putchar(&#x27;*&#x27;);&#125;<br>putchar(&#x27;\n&#x27;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><h3 id="9-1"><a href="#9-1" class="headerlink" title="9-1"></a>9-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int main()&#123;<br>char str[]=&quot;ABC\0DEF&quot;;<br>printf(&quot;字符串str为\&quot;%s\&quot;。\n&quot;,str);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-2"><a href="#9-2" class="headerlink" title="9-2"></a>9-2</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>int main()<br>&#123;<br>char s[]=&quot;ABC&quot;;<br><br>    s[0]=&#x27;\0&#x27;;<br> <br>    printf(&quot;字符串s为%s。\n&quot;,s);<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-3"><a href="#9-3" class="headerlink" title="9-3"></a>9-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 10<br>int myStrcmpWithoutPointers(const char str1[], const char str2[]) &#123;<br>int i = 0;<br><br>    while (str1[i] != &#x27;\0&#x27; &amp;&amp; str2[i] != &#x27;\0&#x27;) &#123;<br>        if (str1[i] != str2[i]) &#123;<br>            return str1[i] - str2[i];<br>        &#125;<br>        i++;<br>    &#125;<br>    return str1[i] - str2[i];<br>&#125;<br>int main()<br>&#123;<br>int i;<br>char s[NUMBER][128];<br>for(i=0;i&lt;NUMBER;i++)&#123;<br>printf(&quot;s[%d]:&quot;,i);<br>scanf(&quot;%s&quot;,s[i]);<br>if (myStrcmpWithoutPointers(s[i], &quot;$$$$$&quot;) == 0)<br>break;<br>&#125;<br>for(i=0;i&lt;NUMBER;i++)<br>printf(&quot;s[%d]=\&quot;%s\&quot;\n&quot;,i,s[i]);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-4"><a href="#9-4" class="headerlink" title="9-4"></a>9-4</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>void null_string(char s[])&#123;<br>s[0] = &#x27;\0&#x27;;<br>&#125;<br><br>int main()&#123;<br>char s[] = &quot;abc&quot;;<br>null_string(s);<br>printf(&quot;该字符串为: \&quot;%s\&quot;&quot;, s);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-5"><a href="#9-5" class="headerlink" title="9-5"></a>9-5</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int  str_char(const  char s[],int c)&#123;<br>int i=0;<br>while(s[i])<br>&#123;<br>if(s[i]==&#x27;c&#x27;)&#123;<br>return i;<br>&#125;<br>i++;<br>&#125;<br>return -1;<br>&#125;<br>int main() &#123;<br>char s[] = &quot;example&quot;;<br>int index = str_char(s, &#x27;c&#x27;);<br>if (index != -1) &#123;<br>printf(&quot;字符 &#x27;c&#x27; 在字符串中的索引是 %d\n&quot;, index);<br>&#125; else &#123;<br>printf(&quot;字符 &#x27;c&#x27; 未在字符串中找到\n&quot;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-6"><a href="#9-6" class="headerlink" title="9-6"></a>9-6</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int  str_char(const  char s[],int c)&#123;<br>int i=0,j=0;<br><br>    while(s[i])<br>    &#123;<br>        if(s[i]==&#x27;c&#x27;)&#123;<br>            j+=1;<br>        &#125;<br>        i++;<br>    &#125;<br>    return j;<br>&#125;<br>int main() &#123;<br>char s[] = &quot;cexcamplec&quot;;<br>int index = str_char(s, &#x27;c&#x27;);<br>if (index != 0) &#123;<br>printf(&quot;字符 &#x27;c&#x27; 有： %d个\n&quot;, index);<br>&#125; else &#123;<br>printf(&quot;字符 &#x27;c&#x27; 未在字符串中找到\n&quot;);<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-7"><a href="#9-7" class="headerlink" title="9-7"></a>9-7</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>void put_stringn(const char s[], int n) &#123;<br>for (int i = 0; i &lt; n; i++) &#123;<br>for (int j = 0; s[j] != &#x27;\0&#x27;; j++) &#123;<br>putchar(s[j]);<br>&#125;<br>&#125;<br>&#125;<br><br>int main() &#123;<br>int j;<br>char str[128];<br>printf(&quot;请输入字符: &quot;);<br>scanf(&quot;%s&quot;, str);<br>printf(&quot;要重复多少次：&quot;);<br>scanf(&quot;%d&quot;, &amp;j);<br>printf(&quot;%s字符重复%d次为:&quot;, str, j);<br><br>    put_stringn(str, j);<br>    printf(&quot;.\n&quot;);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-8-p"><a href="#9-8-p" class="headerlink" title="9-8 p&gt;"></a>9-8 p&gt;</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>void put_string(const char s[])<br>&#123;int len=0;<br>while(s[len])<br>len++;<br>int i;<br>for(i=len-1;i&gt;=0;i--)<br>putchar(s[i]);<br>&#125;<br><br><br>int main()<br>&#123;<br>char str[128];<br><br>    printf(&quot;请输入一个字符串：&quot;);<br>    scanf(&quot;%s&quot;,str);<br> <br>    printf(&quot;字符串\&quot;%s\&quot;逆向后：&quot;,str);<br>    put_string(str);<br> <br>    return 0;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="9-9"><a href="#9-9" class="headerlink" title="9-9"></a>9-9</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER 128<br><br>void put_stringn(char s[]) &#123;<br>int len = 0;<br><br>    while (s[len] != &#x27;\0&#x27;) &#123;<br>        len++;<br>    &#125;/*计算字符串长度*/<br> <br>    for (int i = 0; i &lt; len / 2; i++) &#123;<br>        char temp = s[i];<br>        s[i] = s[len - 1 - i];<br>        s[len - 1 - i] = temp;<br>    &#125;<br>&#125;<br><br>int main() &#123;<br>char str[NUMBER];<br>printf(&quot;请输入字符: &quot;);<br>scanf(&quot;%s&quot;, str);<br>printf(&quot;%s字符的逆向显示：&quot;, str);<br><br>    put_stringn(str);<br> <br>    printf(&quot;%s.\n&quot;, str);<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-10"><a href="#9-10" class="headerlink" title="9-10"></a>9-10</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>void del_digit(char s[])<br>&#123;<br>int i = 0;<br>int j = 0;<br>char temp[128] = &#123;0&#125;;<br><br>    while (s[i])<br>    &#123;<br>        if (s[i] &lt; &#x27;0&#x27; || s[i] &gt; &#x27;9&#x27;)<br>        &#123;<br>            temp[j] = s[i];<br>            j++;<br>        &#125;<br>        i++;<br>    &#125;<br> <br>    j = 0;<br>    while (temp[j])<br>    &#123;<br>        s[j] = temp[j];<br>        j++;<br>    &#125;<br>    s[j] = &#x27;\0&#x27;;<br>&#125;<br><br><br>int main()<br>&#123;<br>int i;<br>char str[128];<br><br>    printf(&quot;请输入一个字符串：&quot;);<br>    scanf(&quot;%s&quot;, str);<br> <br>    del_digit(str);<br>    printf(&quot;删除数字后：%s\n&quot;, str);<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-11"><a href="#9-11" class="headerlink" title="9-11"></a>9-11</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>#define NUMBER1 10<br>#define NUMBER2 128<br>void put_strary(const char s[][NUMBER2], int n) &#123;<br>int i;<br>for (i = 0; i &lt; n; i++)<br>printf(&quot;s[%d]=\&quot;%s\&quot;\n&quot;, i, s[i]);<br>&#125;<br><br>int myStrcmpWithoutPointers(const char str1[], const char str2[]) &#123;<br>int i = 0;<br>while (str1[i] != &#x27;\0&#x27; &amp;&amp; str2[i] != &#x27;\0&#x27;) &#123;<br>if (str1[i] != str2[i]) &#123;<br>return str1[i] - str2[i];<br>&#125;<br>i++;<br>&#125;<br>return str1[i] - str2[i];<br>&#125;<br><br>int main() &#123;<br>int i;<br>char cs[NUMBER1][NUMBER2];<br>for (i = 0; i &lt; NUMBER1; i++) &#123;<br>printf(&quot;s[%d]:&quot;, i);<br>scanf(&quot;%s&quot;, cs[i]);<br>if (myStrcmpWithoutPointers(cs[i], &quot;$$$$$&quot;) == 0)<br>break;<br>&#125;<br>put_strary(cs, i);<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9-12"><a href="#9-12" class="headerlink" title="9-12"></a>9-12</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>int str_len(char s[])&#123;<br>int len=0 ;<br>while(s[len]!=&#x27;\0&#x27;)&#123;<br>len++;<br>&#125;<br>return len;<br>&#125;<br>void rev_string(char s[][128], int n) &#123;<br>int i, j;<br>for (i = 0; i &lt; n; i++) &#123;<br>int len = str_len(s[i]);<br>for (j = 0; j &lt; len / 2; j++) &#123;<br>char temp = s[i][j];<br>s[i][j] = s[i][len - 1 - j];<br>s[i][len - 1 - j] = temp;<br>&#125;<br>&#125;<br>&#125;<br>int main() &#123;<br>char strings[][128] = &#123;&quot;SEC&quot;, &quot;ABC&quot;&#125;;<br>int num_strings = 2;<br><br>    rev_string(strings, num_strings);<br> <br>    for (int i = 0; i &lt; num_strings; i++) &#123;<br>        printf(&quot;%s\n&quot;, strings[i]);<br>    &#125;<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h2><h3 id="10-1"><a href="#10-1" class="headerlink" title="10-1"></a>10-1</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br>void adjust_point(int *n)&#123;<br>if(*n&lt;0)<br>*n=0;<br>if(*n&gt;100)<br>*n=100;<br>&#125;<br>int main()&#123;<br>int i;<br>printf(&quot;请输入一个数字：&quot;);<br>scanf(&quot;%d&quot;,&amp;i);<br>adjust_point(&amp;i);<br>printf(&quot;该数字为：%d&quot;,i);<br>return 0;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>10-2</p><h3 id="10-3"><a href="#10-3" class="headerlink" title="10-3"></a>10-3</h3><figure class="highlight plaintext"><figcaption><span>bush</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs [c]">#include &lt;stdio.h&gt;<br><br>void sort3(int *n1,int *n2,int *n3)<br>&#123;<br>int temp;<br><br>    if(*n1&gt;*n2)<br>    &#123;<br>        temp=*n1;<br>        *n1=*n2;<br>        *n2=temp;<br>    &#125;<br> <br>    if(*n1&gt;*n3)<br>    &#123;<br>        temp=*n1;<br>        *n1=*n3;<br>        *n3=temp;<br>    &#125;<br> <br>    if(*n2&gt;*n3)<br>    &#123;<br>        temp=*n2;<br>        *n2=*n3;<br>        *n3=temp;<br>    &#125;<br>&#125;<br><br><br>int main()<br>&#123;<br>int a,b,c;<br><br>    printf(&quot;整数a：&quot;);scanf(&quot;%d&quot;,&amp;a);<br>    printf(&quot;整数b：&quot;);scanf(&quot;%d&quot;,&amp;b);<br>    printf(&quot;整数c：&quot;);scanf(&quot;%d&quot;,&amp;c);<br> <br>    sort3(&amp;a,&amp;b,&amp;c);<br> <br>    printf(&quot;a = %d\nb = %d\nc = %d\n&quot;,a,b,c);<br> <br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>c</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+github+Zeabur搭建博客</title>
    <link href="/2024/09/15/hexo+github/"/>
    <url>/2024/09/15/hexo+github/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>看了一个学长的发出的博客，自己也想弄一个博客，但经历十分的曲折，挑灯夜战到了五点，本来是一件很简单的事，但是总有些小毛病，<br>所以我想总结我的经历，可以给别人一个起到帮助的作用。</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li><a href="https://nodejs.org/">Node.js  必需的环境 安装最新版Node.js</a></li><li><a href="http://git-scm.com/">git 必需的环境 版本控制，管理代码</a></li><li><a href="https://npmmirror.com/">npmmirror 源淘宝NPM镜像源</a></li><li><a href="https://hexo.io/"> Hexo 博客官网,可以查找更多主题</a></li><li><a href="http://localhost:4000/2024/07/31/AI%20era/Hexo/GitHub.conm>">Github 需要有一个GitHub账号，用来保存你的代码。</a></li><li><a href="https://code.visualstudio.com/">Vscode 方便后续操作非必需</a></li></ul><p>如果github进不去的话，就自行上网找找如何修改DNS,并且改成阿里云的，或者可以下载个加速器给github加速一下，网上的方法有很多，就不仔细说了。</p><h2 id="正式安装hexo"><a href="#正式安装hexo" class="headerlink" title="正式安装hexo"></a>正式安装hexo</h2><p>首先检查一下环境有没有出错了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bush">node -v<br>npm -v<br>git -v<br>cnpm -v (这个可有可无）<br></code></pre></td></tr></table></figure><p>安装hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bush">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>如果网速不太行的话,选择下面其中一种方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bush">npm install -g cnpm --registry=https://registry.npmmirror.com<br>cnpm install -g hexo-cli<br></code></pre></td></tr></table></figure><h2 id="自选合适的目录，新建文件夹-初始化hexo项目"><a href="#自选合适的目录，新建文件夹-初始化hexo项目" class="headerlink" title="自选合适的目录，新建文件夹,初始化hexo项目"></a>自选合适的目录，新建文件夹,初始化hexo项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bush">cd floder <br>hexo init<br>cnpm install<br></code></pre></td></tr></table></figure><h2 id="选择并安装一个主题"><a href="#选择并安装一个主题" class="headerlink" title="选择并安装一个主题"></a>选择并安装一个主题</h2><ul><li>先选择一个hexo的主题，我用的是Fluid(也就是我疯狂出错的地方）- </li><li>访问主题的GitHub页面，可以选择下载压缩包，也可以用git下载,还可以用npm(cnpm)下载<br>详细的操作看<a href="https://hexo.fluid-dev.com/docs/">用户手册</a><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">-b</span> <span class="hljs-keyword">master</span> <span class="hljs-title">https</span>://github.com/fluid-dev/hexo-theme-fluid.git<br></code></pre></td></tr></table></figure></li><li>到最折磨人的地方了，首先要下载hexo-pagination moment hexo-util @adobe&#x2F;css-tools nunjucks 这几个插件，这该死的vscode<br>没有给出出错在哪，只给了渲染失败，官方文档也没有写出来，下载完后就首先找到根目录下的_config.yml文件，然后找到theme这个,改成下面这样<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bush">theme:fluid<br>#下载的指令是(后面也可以空格然后接着打其他插件的名字也行）： <br>cnpm install moment<br></code></pre></td></tr></table></figure>然后弄一个新的_config.fluid.yml文件在根目录，然后找到下载的主题，然后将主题里面的_config.yml文件中的内容复制到_config.fluid.yml上，<br>大概率是不会出错了，不同的主题操作不一样的，所以还是的仔细看官方文档</li></ul><h2 id="本地生成和预览"><a href="#本地生成和预览" class="headerlink" title="本地生成和预览"></a>本地生成和预览</h2><ul><li><p>清理缓存（最后每一次启动前都清一下）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bush">hexo clean<br>#简写：hexo cl<br></code></pre></td></tr></table></figure></li><li><p>生成静态文件：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br></code></pre></td></tr></table></figure></li><li><p>启动本地的服务器,在浏览器中访问<a href="http://localhost:4000查看效果。">http://localhost:4000查看效果。</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bush">hexo s<br></code></pre></td></tr></table></figure></li></ul><p>如果前面的步骤都没有出错的话，恭喜你快要搭建一个属于自己的线上的blog了  </p><h2 id="推送或部署到GitHub"><a href="#推送或部署到GitHub" class="headerlink" title="推送或部署到GitHub"></a>推送或部署到GitHub</h2><ul><li><p>在github上创建一个仓库</p></li><li><p>安装hexo部署插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bush">官方源<br>npm install hexo-deployer-git --save<br>阿里源<br>cnpm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>配置Hexo部署信息，在_config.yml中规范写法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bush">deploy:<br>type:git<br>repo:https://你的访问令牌@github.com/你的用户名/你的仓库名.git #直接复制你的仓库的网址就好了<br>branch:main<br></code></pre></td></tr></table></figure></li><li><p>推到Github:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bush">hexo d<br></code></pre></td></tr></table></figure></li></ul><h2 id="使用免费容器进行部署zeabur这个很简单的，我就不过说名了-自行上网找吧"><a href="#使用免费容器进行部署zeabur这个很简单的，我就不过说名了-自行上网找吧" class="headerlink" title="使用免费容器进行部署zeabur这个很简单的，我就不过说名了,自行上网找吧"></a>使用免费容器进行部署zeabur这个很简单的，我就不过说名了,自行上网找吧</h2><h2 id="一些提示和总结"><a href="#一些提示和总结" class="headerlink" title="一些提示和总结"></a>一些提示和总结</h2><p><strong>_post文件夹中必须要有一篇以上的md文件，不然的话，你的辛苦弄好的blog就要gg了（别问我是咋知道的</strong><br>其余的一些操作就看<a href="https://hexo.fluid-dev.com/docs/">官方文档</a>，如何写的blog的话,可以像htmll那样写，或者是markdown<br>如果以上步骤都没有出现差误，你应该是可以安装并且配置好你的blog的，并且别人可以通过网址来访问你的blog</p>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
